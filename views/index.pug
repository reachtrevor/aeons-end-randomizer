extends ./_shell

block Body
  section.is-showing#create-join
    h2 Create a Room
    p Welcome, you need to create a room to get started
    form#createRoomForm
      div: input(type="text", name="name", value="trevor")
      div: input(type="number", name="playerCount" value="2")
      button(type="submit") Create a Room
      button#dropRoomsBtn Drop all Rooms

    div
      form#joinRoomForm
        div: input(type="text", name="name")
        div: input(type="text", name="room", placeholder="Room ID")
        button(type="submit") Join Room
    div
      span#dropped

  section#joined-room
    div
      h2 Room
      p Waiting for other players...

    aside
      ul.player-list

block Footer
  script(src="/socket.io/socket.io.js")
  script.
    var $createRoomForm = $('#createRoomForm')
    var $dropRoomsBtn = $('#dropRoomsBtn')
    var $joinRoomForm = $('#joinRoomForm')
    var $section_create = $('#create-join')
    var $section_room = $('#joined-room')

    // Start the room up
    $createRoomForm.on('submit', function(e) {
      e.preventDefault();
      $.ajax({
        url: '/start',
        method: 'POST',
        data: $createRoomForm.serialize()
      }).done(startGame);
    })

    $joinRoomForm.on('submit', function(e) {
      var $input = $(this).find('input[name="room"]');

      e.preventDefault();
      $.ajax({
        url: '/join/' + $input.val(),
        method: 'POST'
      }).done(joinGame);
    })

    // Socket io stuffs
    function startGame(data) {

      // Open socket
      var socket = io.connect('http://localhost:4200')

      // Wait for connection and then emit the join message with
      // the room and player ID provided in the API response
      socket.on('connect', function() {
        socket.emit('join', { room: data.room, player: data.player })
      })
    }

    function joinGame(data) {

      // Open socket
      var socket = io.connect('http://localhost:4200')

      // Wait for connection and then emit the join message with
      // the room and player ID provided in the API response.
      socket.on('connect', function() {
        socket.emit('join', { room: data.room, player: data.player })
      })
    }

    socket.on('joined', function(data) {
      console.log('this person joined...', data)
      $section_create.removeClass('is-showing')
      $section_room.addClass('is-showing')
    })

    socket.on('left', function(data) {
      console.log('this person left...', data)
    })
